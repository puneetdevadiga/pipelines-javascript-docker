trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'acb07c7b-8f50-4992-a26c-71087d6fc0c7'
  imageRepository: 'puneetdevadigapipelinesjavascriptdocker'
  containerRegistry: 'aksacrpd2025.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'aksacrpd20256492-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

jobs:
- job: BuildAndDeploy
  displayName: Build and Deploy
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: Docker@2
    displayName: Build and push an image to container registry
    inputs:
      command: buildAndPush
      repository: $(imageRepository)
      dockerfile: $(dockerfilePath)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: |
        $(tag)

  - upload: manifests
    artifact: manifests

  - task: KubernetesManifest@0
    displayName: Create imagePullSecret
    inputs:
      action: createSecret
      secretName: $(imagePullSecret)
      dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

  - task: KubernetesManifest@0
    displayName: Deploy to Kubernetes cluster
    inputs:
      action: deploy
      manifests: |
        $(Pipeline.Workspace)/manifests/deployment.yml
        $(Pipeline.Workspace)/manifests/service.yml
      imagePullSecrets: |
        $(imagePullSecret)
      containers: |
        $(containerRegistry)/$(imageRepository):$(tag)

  - task: Kubernetes@1
    displayName: 'Create a new namespace for the pull request'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/pull/')
    inputs:
      command: apply
      useConfigurationFile: true
      inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

  - task: KubernetesManifest@0
    displayName: Create imagePullSecret for PR
    condition: startsWith(variables['Build.SourceBranch'], 'refs/pull/')
    inputs:
      action: createSecret
      secretName: $(imagePullSecret)
      namespace: $(k8sNamespaceForPR)
      dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

  - task: KubernetesManifest@0
    displayName: Deploy to the new namespace in the Kubernetes cluster
    condition: startsWith(variables['Build.SourceBranch'], 'refs/pull/')
    inputs:
      action: deploy
      namespace: $(k8sNamespaceForPR)
      manifests: |
        $(Pipeline.Workspace)/manifests/deployment.yml
        $(Pipeline.Workspace)/manifests/service.yml
      imagePullSecrets: |
        $(imagePullSecret)
      containers: |
        $(containerRegistry)/$(imageRepository):$(tag)

  - task: Kubernetes@1
    name: get
    displayName: 'Get services in the new namespace'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/pull/')
    continueOnError: true
    inputs:
      command: get
      namespace: $(k8sNamespaceForPR)
      arguments: svc
      outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'

  - script: |
      url="$(get.KubectlOutput)"
      message="Your review app has been deployed"
      if [ ! -z "$url" -a "$url" != "http://:" ]
      then
        message="${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
      fi
      echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"
    displayName: 'Set GitHub comment'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/pull/')